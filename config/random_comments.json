{
  "New line warning": [
    "You should add a newline at EOF to make github happy :smile:",
    "You could config your IDE to get rid of newline warning from github",
    "Beware of the newline here"
  ],
  "Missing space": [
    "I think you should put a space here for consistency",
    "Missing a space here",
    "You could put a space here to make it consistent"
  ],
  "Extra space": [
    "No need for extra space here",
    "Since this is string interpolation, I think we would not add space here",
    "You should remove the extra space here"
  ],
  "Explicit return": [
    "You don't need to explicitly `return` here",
    "`return` could be omitted",
    "No need for explicit `return` here"
  ],
  "Use text field tag": [
    "You may use `text_field_tag` here",
    "You could use `text_field_tag` instead",
    "You may consider `text_field_tag` instead"
  ],
  "Use email field tag": [
    "You may use `email_field_tag` here",
    "You could use `email_field_tag` instead",
    "You may consider `email_field_tag` instead"
  ],
  "Use number field tag": [
    "You may use `number_field_tag` here",
    "You could use `number_field_tag` instead",
    "You may consider `number_field_tag` instead"
  ],
  "Use file field tag": [
    "You may use `file_field_tag` here",
    "You could use `file_field_tag` instead",
    "You may consider `file_field_tag` instead"
  ],
  "Use hidden field tag": [
    "You may use `hidden_field_tag` here",
    "You could use `hidden_field_tag` instead",
    "You may consider `hidden_field_tag` instead"
  ],
  "Use select tag": [
    "You may use `select_tag` here",
    "You could use `select_tag` instead",
    "You may consider `select_tag` instead"
  ],
  "Use view helper": [
    "You may consider view helper here"
  ],
  "Use link to": [
    "You may use `link_to` here",
    "You could use `link_to` instead",
    "You may consider `link_to` instead"
  ],
  "Use image tag": [
    "You may use `image_tag` here",
    "You could use `image_tag` instead",
    "You may consider `image_tag` instead"
  ],
  "Explicit div": [
    "`div` could be omitted",
    "No need for explicit `div` here",
    "You could remove `div` without changing the semantic"
  ],
  "Old hash syntax": [
    "You may consider moving to new hash syntax 1.9",
    "You could use new hash syntax here",
    "Still using old hash syntax here?"
  ],
  "Use action": [
    "Try using `action` instead of `filter`",
    "You may consider using new syntax `action` instead",
    "New syntax `action` is preferable here"
  ],
  "Check exists": [
    "I think `exists?` is faster here",
    "You may use `exists?` for better performance here",
    "You could consider `exists?` here, it's faster I think"
  ],
  "Partial redundancy": [
    "I think we could omit `partial` here",
    "`partial` is redundant",
    "`partial` could be omitted",
    "I think we could remove `partial` without affecting the meaning of this"
  ],
  "Locals redundancy": [
    "I think we could omit `locals` here",
    "`locals` is redundant",
    "`locals` could be omitted",
    "I think we could remove `locals` without affecting the meaning of this"
  ],
  "Use to be matchers": [
    "You could consider `be_<1>` matcher here\n\n```ruby\n<0>).to be_<1><2>\n```",
    "Another way to do that\n\n```ruby\n<0>).to be_<1><2>\n```",
    "How about this?\n\n```ruby\n<0>).to be_<1><2>\n```"
  ],
  "Use not_to be matchers": [
    "You could consider `be_<1>` matcher here\n\n```ruby\n<0>).not_to be_<1><2>\n```",
    "Another way to do that\n\n```ruby\n<0>).not_to be_<1><2>\n```",
    "How about this?\n\n```ruby\n<0>).not_to be_<1><2>\n```"
  ],
  "Add factory girl syntax": [
    "You could get rid of `FactoryGirl.` prefix by adding `FactoryGirl::Syntax::Methods` to your test config",
    "You may want to [setup your test config](https://github.com/thoughtbot/factory_girl/blob/master/GETTING_STARTED.md) to get rid of FactoryGirl syntax",
    "You may consider including `FactoryGirl::Syntax::Methods` to your test config instead"
  ],
  "Use have_http_status": [
    "You may consider using `have_http_status` here for more semantic test",
    "Another way to do that:\n\n```ruby\nexpect(response).to have_http_status :<s<0>>\n```",
    "You could use `expect(response).to have_http_status(:<s<0>>)` instead"
  ],
  "Hardcoded dimensions": [
    "You may consider moving hardcoded value into dimens.xml",
    "Hardcoded value should be moved into dimens.xml"
  ],
  "Hardcoded string": [
    "You may consider moving hardcoded string into strings.xml",
    "Hardcoded string should be moved into strings.xml"
  ],
  "Use auto prefixer": [
    "For Rails, we have gem [autoprefixer-rails](https://github.com/ai/autoprefixer-rails) to support multi-browser style",
    "You may want to use [autoprefixer-rails](https://github.com/ai/autoprefixer-rails) to reduce the hardwork",
    "Rails has a very cool gem: [autoprefixer-rails](https://github.com/ai/autoprefixer-rails) for this use, check it out :smile:"
  ],
  "Nil checking": [
    "`.nil?` here could be omitted",
    "I think it's not necessary to add `.nil?` here"
  ],
  "Use blank": [
    "You may use `<0>.blank?` instead",
    "You may consider `blank?` instead"
  ],
  "Use present": [
    "You may use `<0>.present?` instead",
    "You may consider `present?` instead"
  ],
  "Add dependent destroy": [
    "You may consider adding `dependent: :destroy` here",
    "`dependent: :destroy` maybe?",
    "How about `dependent: :destroy` here?"
  ],
  "Use plural form": [
    "I think `<0>` should be in plural form instead"
  ],
  "Use singular form": [
    "I think `<0>` should be in singular form instead"
  ]
}
